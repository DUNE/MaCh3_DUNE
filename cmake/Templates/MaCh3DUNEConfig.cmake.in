@PACKAGE_INIT@

set(MACH3DUNE_VERSION @MACH3DUNE_VERSION@)

get_filename_component(MACH3DUNE_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "Adding ${MACH3DUNE_CMAKE_DIR} to Module search path")
message(STATUS "Adding ${MACH3DUNE_CMAKE_DIR}/cmake to Module search path")
list(APPEND CMAKE_MODULE_PATH "${MACH3DUNE_CMAKE_DIR}")
list(APPEND CMAKE_MODULE_PATH "${MACH3DUNE_CMAKE_DIR}/cmake")

set(MaCh3DUNE_FOUND TRUE)

include(ROOT)

if(NOT TARGET ROOT::ROOT)
  cmessage(WARNING "Expected MACH3DUNE to set up dependency target: ROOT::ROOT")
  set(MaCh3DUNE_FOUND FALSE)
  return()
endif()


find_package(MaCh3 @MaCh3_VERSION@ REQUIRED)

if(NOT TARGET MaCh3::All)
  cmessage(WARNING "Expected MACH3DUNE to set up dependency target: MaCh3::All")
  set(MaCh3DUNE_FOUND FALSE)
  return()
endif()

include(${MaCh3DUNE_CMAKE_DIR}/MaCh3DUNETargets.cmake)

get_filename_component(MaCh3_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

find_path(MaCh3DUNE_LIB_DIR
  NAMES libSamplePDFDUNE.so
  PATHS ${MaCh3DUNE_CMAKE_DIR}/lib/
)

find_path(MaCh3DUNE_PREFIX
  NAMES bin/setup.MaCh3DUNE.sh
  PATHS ${MaCh3DUNE_CMAKE_DIR}/
)

cmessage(STATUS "MaCh3DUNE_LIB_DIR: ${MaCh3DUNE_LIB_DIR}")
cmessage(STATUS "MaCh3DUNE_INCLUDE_DIR: ${MaCh3DUNE_INCLUDE_DIR}")
cmessage(STATUS "MaCh3DUNE_PREFIX: ${MaCh3DUNE_PREFIX}")
cmessage(STATUS "MaCh3DUNE_VERSION: ${MaCh3DUNE_VERSION}")

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(MaCh3
    REQUIRED_VARS
      MaCh3DUNE_INCLUDE_DIR
      MaCh3DUNE_LIB_DIR
      MaCh3DUNE_PREFIX
    VERSION_VAR
      MaCh3DUNE_VERSION
)
