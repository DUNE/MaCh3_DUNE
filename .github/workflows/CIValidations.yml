name: Event Rates Beam

on:
  pull_request:
    branches: [develop]
  push:
    branches: ["hwallace/patch/event_rate_bot"]

permissions:
  contents: read
  packages: write

jobs:
  build-container:
    runs-on: ubuntu-latest
    name: Build Container Image
    outputs:
      image_tag: ${{ steps.build.outputs.image_tag }}
    steps:
      # Set up CVMFS
      - name: Set up CVMFS
        uses: cvmfs-contrib/github-action-cvmfs@v4

      # Checkout the repository code
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build docker container
        id: build
        env:
          MACH3_DUNE_VERSION: ${{ github.event.pull_request.head.ref || github.ref_name }}
        run: |
          docker build . \
          --file doc/MaCh3DockerFiles/Alma9/Dockerfile \
          --tag ghcr.io/dune/mach3:alma9test \
          --build-arg MACH3_DUNE_VERSION="${MACH3_DUNE_VERSION}" \
          --build-arg MACH3_DUNE_BUILD_ARGS=${{ matrix.build_arg }}

  run-validations:
    needs: build-container
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: Beam Event Rate Validation
            test_exe: build/src/EventRates
            test_config: configs/EventRates_Beam.yaml
            test_output: beam_valid.txt
            correct_output: tests/test_results/EventRatesV2TDR.txt
            build_arg: -DCUDAProb3Linear_ENABLED=ON
            # Add a list of directories to link
            splines:
              source: /cvmfs/dune.osgstorage.org/pnfs/fnal.gov/usr/dune/persistent/stash/MaCh3/inputs/TDR/v2/DUNE_2021_FD_splines
              target: inputs/DUNE_spline_files
            mc_files:
              source: /cvmfs/dune.osgstorage.org/pnfs/fnal.gov/usr/dune/persistent/stash/MaCh3/inputs/TDR/v2/DUNE_2023_FD_CAFs
              target: inputs/DUNE_CAF_files

    name: Run Test ${{matrix.name}}
    steps:
      # Set up CVMFS
      - name: Set up CVMFS
        uses: cvmfs-contrib/github-action-cvmfs@v4

      - name: Link CVMFS repos, validate and run
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ needs.build-container.outputs.image_tag }}
          shell: bash
          options: -v /cvmfs:/cvmfs:shared:/github/workspace/
          run: |
            # Create target directories if they don't exist
            ln -sf ${{ matrix.mc_files.source }} ${{ matrix.mc_files.target }}
            ln -sf ${{ matrix.splines.source }} ${{ matrix.splines.target }}

            # Validate the symlinks
            root -l -q -b 'tests/test_scripts/root_file_corrupt.C("${{matrix.mc_files.target}}")'
            root -l -q -b 'tests/test_scripts/root_file_corrupt.C("${{matrix.splines.target}}")'

            # Run the code
            source ./install/bin/setup.MaCh3.sh
            source ./install/bin/setup.MaCh3DUNE.sh
            ./${{matrix.test_exe}} ${{matrix.test_config}} 2>&1 | tee /github/workspace/${{matrix.test_output}}

      - name: Check that the files are the exact same
        uses: LouisBrunner/diff-action@v2.0.0
        with:
          old: /github/workspace/{{ matrix.correct_output }}
          new: /github/workspace/${{ matrix.correct_output }}
          mode: strict
          tolerance: same